name: Deploy to GitHub Pages

on:
  push:
    tags:
      - 'pages/v*'

concurrency:
  group: pages-deployment-${{ github.ref }}
  cancel-in-progress: false

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Extract version information
        id: version
        run: |
          TAG_VERSION=${GITHUB_REF#refs/tags/pages/v}
          echo "tag_version=$TAG_VERSION" >> $GITHUB_OUTPUT

          IFS='.' read -ra VERSION_PARTS <<< "$TAG_VERSION"
          MAJOR=${VERSION_PARTS[0]}
          MINOR=${VERSION_PARTS[1]}
          PATCH=${VERSION_PARTS[2]}
          NEXT_PATCH=$((PATCH + 1))
          NEXT_VERSION="$MAJOR.$MINOR.$NEXT_PATCH-dev"
          echo "next_version=$NEXT_VERSION" >> $GITHUB_OUTPUT

          echo "Extracted version: $TAG_VERSION"
          echo "Next development version: $NEXT_VERSION"

      - name: Update version for release
        run: npm version ${{ steps.version.outputs.tag_version }} --no-git-tag-version

      - name: Install dependencies
        run: npm ci

      - name: Build production artifacts
        run: npm run build

      - name: Configure GitHub Pages
        uses: actions/configure-pages@v4

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./dist

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: dist/**/*
          name: 'Bodhi Chat v${{ steps.version.outputs.tag_version }}'
          body: |
            Bodhi Chat Release v${{ steps.version.outputs.tag_version }}

            üåê Live Application: https://bodhiapps.github.io/bodhichat

            This release has been automatically deployed to GitHub Pages.
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Configure Git for version bump
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"

      - name: Checkout main branch
        run: |
          git fetch --depth=1 origin main
          git checkout -B main origin/main

      - name: Bump version and add -dev suffix
        run: |
          npm version ${{ steps.version.outputs.next_version }} --no-git-tag-version
          npm install
          git add package.json package-lock.json
          git commit -m "chore: bump version to ${{ steps.version.outputs.next_version }} after release [skip ci]"
          git push origin main
